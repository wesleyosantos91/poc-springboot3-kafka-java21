version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: "2181"
    ports:
      - "2181:2181"

  broker:
    image: confluentinc/cp-kafka:5.5.1
    container_name: broker
    hostname: broker
    ports:
      - "9092:9092"
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,CONNECTIONS_FROM_HOST://:19092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://localhost:19092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_RACK: "docker"

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.1
    container_name: schema-registry
    hostname: schema-registry
    depends_on:
      - zookeeper
      - broker
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8181'
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:9092'
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
    ports:
      - "8181:8181"

  kafka-setup:
    image: confluentinc/cp-kafka:5.5.1
    container_name: kafka-setup
    hostname: kafka-setup
    depends_on:
      - broker
      - schema-registry
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
              cub kafka-ready -b broker:9092 1 20 && \
              kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 3 --replication-factor 1 --topic person  && \
              kafka-topics --list --bootstrap-server broker:9092 && \
              echo Topics are created‚è≥'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.5
    container_name: kafka-schema-registry-ui
    restart: unless-stopped
    depends_on:
      - schema-registry
    ports:
      - "8001:8000"
    environment:
      SCHEMAREGISTRY_URL: http://schema-registry:8181
      PROXY: "true"

  kafdrop:
    container_name: kafdrop
    hostname: kafdrop
    image: obsidiandynamics/kafdrop
    ports:
      - "9900:9000"
    environment:
      KAFKA_BROKERCONNECT: 'broker:9092'
    depends_on:
      - broker